#import "classpath:/model/Physics.tuml"

using UCore.de.*;
/**
* insert documentation for the model 
* 
*/
Model Track { 
	package de {
		package emir { 
			package model {
				package application {
					package track {
						
						/**
						 * One track point
						 * A track usually is a set of positions (with additional information) that have been seen in the past
						  */
						struct TrackPoint{
							/** Time of this measurement */
							val Time			time;
							/** Coordiante of the object at the given time */
							val Coordinate		coordinate;
							/** orientation of the object at the given time */
							val Angle			heading;
							/** course / direction of movement, that may differ from the orientation, of the object at the given time */
							val Angle			course;
							/** magnitude of movement in direction of course */
							val Speed			speed;
							/** an optional reference to the receiver / generator of this track element*/
							ref UObject[0 .. 1]	source;
						}
						
						class Track {
							/** ordered list of elements  
							 */
							TrackPoint[*]		elements;
														
							/** returns the time of the first track point */
							Time first() const;
							
							/** returns the time of the last track point */							
							Time last() const;
							
							/**
							 * returns a new track point for the given time. If there is no measurement available for this time point
							 * the method will (linear) interpolate / may extrapolate the values
							 * @return null, if elements is empty
							 */
							TrackPoint getPositionAt(in Time p);
						}
						
						class TrackCharacteristic extends Characteristic {
							/** maximum number of track points, if the limit is exceeded the oldest track point will be automatically removed. 
							 * if maxTrackPoints is set to < 0 no points will be deleted */
							int					maxTrackPoints = 1000; 
							
							Track				track;
						}
											
					}					
				}
			}
		}		
	}
}	
